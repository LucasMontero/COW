{"version":3,"sources":["route.js","codemirror.controller.js","design.controller.js","frontPage.controller.js","header.controller.js","home.controller.js","login.controller.js","pageForm.controller.js","pages.controller.js","profile.controller.js","settings.controller.js","settings.general.controller.js","settings.mailing.controller.js","sidebar.controller.js","userForm.controller.js","users.controller.js","appUtilities.service.js","authentication.service.js","desingData.service.js","generalData.service.js","mailData.service.js","pageData.service.js","userData.service.js","admPanel.directives.js","frontPage.directives.js"],"names":[],"mappingstDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzppCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["var cowApp = angular.module('cowApp', ['ngRoute', 'angularCSS', 'ui.codemirror']);\n\ncowApp.config(function ($routeProvider, $locationProvider) {\n  $routeProvider\n  .when('/', {\n    templateUrl: '/views/front/page.view.html',\n    controller: 'frontPageCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/front.css']\n  })\n  .when('/404', {\n    templateUrl: '/views/front/errors/404.view.html',\n    controller: '',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/500', {\n    templateUrl: '/views/front/errors/500.view.html',\n    controller: '',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm', {\n    templateUrl: '/views/adm/login.view.html',\n    controller: 'loginCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/home', {\n    templateUrl: '/views/adm/home.view.html',\n    controller: 'homeCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/pages', {\n    templateUrl: '/views/adm/pages.view.html',\n    controller: 'pagesCtrl',\n    controllerAs: 'ctl',\n        css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/pages/newPage', {\n    templateUrl: '/views/adm/pageForm.view.html',\n    controller: 'pageFormCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/pages/editPage/:pageId', {\n    templateUrl: '/views/adm/pageForm.view.html',\n    controller: 'pageFormCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/multimedia', {\n    templateUrl: '/views/adm/multimedia.view.html',\n    controller: '',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/plugins', {\n    templateUrl: '/views/adm/plugins.view.html',\n    controller: '',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/design', {\n    templateUrl: '/views/adm/design.view.html',\n    controller: 'designCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/users', {\n    templateUrl: '/views/adm/users.view.html',\n    controller: 'usersCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/users/profile/:userId', {\n    templateUrl: '/views/adm/profile.view.html',\n    controller: 'profileCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/users/newUser', {\n    templateUrl: '/views/adm/userForm.view.html',\n    controller: 'userFormCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/users/editUser/:userId', {\n    templateUrl: '/views/adm/userForm.view.html',\n    controller: 'userFormCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/cow-adm/settings', {\n    templateUrl: '/views/adm/settings.view.html',\n    controller: 'settingsCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/main.css']\n  })\n  .when('/:pageId', {\n    templateUrl: '/views/front/page.view.html',\n    controller: 'frontPageCtrl',\n    controllerAs: 'ctl',\n    css: ['/stylesheets/css/front.css']\n  })\n  .otherwise({redirectTo: '/404'});\n\n  //Use the HTML5 History API\n  $locationProvider.html5Mode(true);\n});\n\ncowApp.run(function ($rootScope, $location, $route, authentication) {\n  $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n    if (/cow-adm/.test($location.path()) && !authentication.isLoggedIn()) {\n      $location.path('/cow-adm');\n    }\n\n    if($location.path() === '/cow-adm' && authentication.isLoggedIn()){\n      $location.path('/cow-adm/home');\n    }\n  });\n});\n","//codemirror.controller\n/**\n * Set codemirror editor options\n *\n * @param  object $scope          Object that refers to the application model.\n *\n */\nangular.module('cowApp').controller('codemirrorCtrl', ['$scope', function($scope){\n  // The modes 'css', 'xml', 'javascript';\n\n  $scope.initMode = \"xml\"\n \n // The ui-codemirror options\n $scope.cmOptions = {\n   lineNumbers: true,\n   htmlMode: true,\n   smartIndent: true,\n   indentWithTabs: true,\n   theme : 'material',\n   onLoad : function(_cm){\n     // HACK to have the codemirror instance in the scope...\n     $scope.setMode = function(mode){\n       _cm.setOption(\"mode\", mode);\n     };\n\n     $scope.setMode($scope.initMode);\n   }\n };\n}]);\n","//design.controller\n/**\n *\n * @param  object $scope          Object that refers to the application model.\n * @param  object desingData      desingData service object\n * @param  object appUtilities    appUtilities service object\n *\n */\nangular.module('cowApp').controller('designCtrl', ['$scope', 'designData', 'appUtilities', function($scope, designData, appUtilities){\n  var ctl = this;\n\n  appUtilities.setTitle(\"COW Administration panel - Design\");\n\n  $scope.menuItems = [['Css', 'css'], ['Javascript', 'javascript'], ['Header', 'xml'], ['Footer', 'xml']];\n\n  designData.getDocument('Css')\n    .success(function(data) {\n        ctl.design.content = data;\n    })\n    .error(function (error) {\n        ctl.toast = appUtilities.createToast(error.toast);\n    });\n\n  ctl.design = {};\n\n  $scope.activeMenu = $scope.menuItems[0];\n\n  $scope.setActive = function(menuItem) {\n    $scope.activeMenu = menuItem;\n\n    designData.getDocument(menuItem[0])\n      .success(function(data) {\n          ctl.design.content = data;\n      })\n      .error(function (error) {\n          ctl.toast = appUtilities.createToast(error.toast);\n      });\n  }\n\n  //On form submit try to save the document\n  ctl.onSubmit = function () {\n    ctl.execution = true;\n    console.log('Submitting update');\n    designData.saveDocument($scope.activeMenu[0], ctl.design.content)\n      .error(function(error){\n          ctl.toast = appUtilities.createToast(error.toast);\n      })\n      .then(function(response){\n          ctl.toast = appUtilities.createToast(response.data.toast);\n     }).finally(function() {\n          ctl.execution = false;\n     });;\n  };\n}]);\n","\n//frontPageCtrl.controller\n/**\n * Cronstruct the front page of the application\n *\n * @param  object appUtilities     appUtilities service object\n * @param  object $location     Angular path service\n * @param  object pageData      pageData service object\n *\n */\nangular.module(\"cowApp\").controller(\"frontPageCtrl\",[\"appUtilities\", \"pageData\", \"$location\", \"$scope\", \"$sce\", function(appUtilities, pageData, $location, $scope, $sce){\n  //controller alias\n  var ctl = this;\n\n  if($location.path() === '/'){\n    pageData.getIndexPage()\n     .success(function(data) {\n         setPage(data);\n      })\n      .error(function (error) {\n          $location.path('/500');\n      });\n  }else{\n    pageData.getPageByPath($location.path())\n     .success(function(data) {\n          if (data.length === 1) {\n              setPage(data);\n          }else{\n              $location.path('/404');\n          }\n      })\n      .error(function (error) {\n          $location.path('/500');\n      });\n  }\n\n  var setPage = function(data){\n    ctl.pageData = data[0];\n    appUtilities.setTitle(ctl.pageData.title);\n    $scope.content = $sce.trustAsHtml(ctl.pageData.content);\n  }\n\n}]);\n","//navigation.controller -> See also navigation.service\n/**\n * Build the parameters and fuctions used in navigation.view\n *\n * @param  object $scope          Object that refers to the application model.\n * @param  object $location       Angular path location\n * @param  object authentication  Authentication service object\n *\n */\nangular.module('cowApp').controller('headerCtrl', ['$scope', '$location', 'authentication', function($scope, $location, authentication){\n  //ctl is the controller alias\n  var ctl = this;\n\n  //Check if user is authenticated and if it is, shows the current user.\n  ctl.isLoggedIn  = authentication.isLoggedIn();\n  ctl.currentUser = authentication.currentUser();\n\n  $scope.onCheck = function(qId){\n      ctl.responsiveShow = $scope.responsive[qId];\n      $scope.$emit('responsiveMenu', $scope.responsive[qId]);\n  }\n\n\n\n  /**\n   * Delete the user session on the browser\n   */\n  $scope.logout = function(){\n    authentication.logout();\n    $location.path('/');gw\n  };\n\n\n}]);\n","//home.controller\n/**\n * Shows in log if controller is running\n *\n * @param  object appUtilities     appUtilities service object\n *\n */\nangular.module(\"cowApp\").controller(\"homeCtrl\",[\"appUtilities\", function(appUtilities){\n  appUtilities.setTitle(\"COW Administration panel\");\n}]);\n","//Authentication - login.controller\n/**\n * Try to login the user with passed credentials\n *\n * @param  object $location       Angular path location\n * @param  object authentication  Authentication service object\n * @param  object appUtilities     appUtilities service object\n *\n */\nangular.module(\"cowApp\").controller(\"loginCtrl\",['$location', \"authentication\", \"userData\", \"appUtilities\",function($location, authentication, userData, appUtilities) {\n    //ctl is the controller alias\n    var ctl = this;\n\n    appUtilities.setTitle(\"COW Administration panel - Login\");\n\n    ctl.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    ctl.fpEmail = \"\";\n\n    //On form submit add input data to credentials variables and try to login with them.\n    ctl.login = function () {\n      authentication.login(ctl.credentials)\n        .error(function(error){\n          ctl.toast = appUtilities.createToast(error.toast);\n        })\n        .then(function(){\n          $location.path('/cow-adm/home');\n        });\n    };\n\n    ctl.recoverUserPassword = function () {\n       ctl.execution = true;\n       userData.recoverUserPassword(ctl.fpEmail)\n         .error(function(error){\n            ctl.toast = appUtilities.createToast(error.toast);\n         })\n         .then(function(response){\n            ctl.toast = appUtilities.createToast(response.data.toast);\n         })\n         .finally(function(){\n           ctl.execution = false;\n         });\n    };\n\n}]);\n","//newPage.controller\n/**\n * Try to register a new page in database\n *\n * @param  object $location   Angular path location\n * @param  object pageData    pageData service object\n * @param  object appUtilities     appUtilities service object\n *\n */\nangular.module(\"cowApp\").controller(\"pageFormCtrl\",[\"$scope\", \"$location\", \"$routeParams\", \"pageData\", \"mailData\", \"appUtilities\", function($scope, $location, $routeParams,pageData, mailData, appUtilities){\n  //ctl is the controller alias\n  var ctl = this;\n\n  ctl.exit = false;\n\n  ctl.pageForm = {\n    title   : \"\",\n    path    : \"\",\n    content : \"\",\n    header  : false,\n    footer  : false,\n    index   : false,\n    public  : false\n   };\n\n  if($routeParams.pageId){\n    appUtilities.setTitle(\"COW Administration panel - Edit Page\");\n\n    ctl.isEdit = true;\n\n    pageData.getPageById($routeParams.pageId)\n      .success(function(data) {\n        ctl.pageForm = data;\n      })\n      .error(function (error) {\n        ctl.toast = appUtilities.createToast(error.toast);\n      });\n  }else{\n    appUtilities.setTitle(\"COW Administration panel - New Page\");\n\n    ctl.isEdit = false;\n  }\n\n  //On form submit try to create a new page.\n  $scope.saveAndExit = function() {\n    ctl.exit = true;\n    populatePage();\n  };\n\n\n  $scope.saveAndStay = function() {\n    populatePage();\n  };\n\n  $scope.close = function() {\n    $location.path('/cow-adm/pages');\n  };\n\n  function populatePage(){\n    ctl.pageForm.header = document.getElementById('header').checked;\n    ctl.pageForm.footer = document.getElementById('footer').checked;\n    ctl.pageForm.index  = document.getElementById('index').checked;\n    ctl.pageForm.public = document.getElementById('public').checked;\n\n    if(ctl.isEdit){\n      console.log('Updating page');\n      pageData.updatePage($routeParams.pageId, ctl.pageForm).error(function(error){\n              ctl.toast = appUtilities.createToast(error.toast);\n        }).then(function(response){\n              checkExit(null, response.data.toast);\n        });\n    }else{\n      console.log('Submitting creation');\n      pageData.createPage(ctl.pageForm)\n        .error(function(error){\n            ctl.toast = appUtilities.createToast(error.toast);\n        })\n        .then(function(response){\n            var subject = \"New page\";\n            var text    = \"A new page has been created\";\n            var html    = \"<p>A new page has been created</p>\";\n\n            var mail     = mailData.createEmail(null, subject, text, html);\n\n            mailData.sendMail(mail);\n\n            checkExit(response.data[0].id, response.data[1].toast);\n        });\n    }\n  }\n\n  function checkExit(pageId, toast){\n    if (ctl.exit || !ctl.isEdit) {\n      appUtilities.setToast(toast);\n\n      if (ctl.exit) {\n        $location.path('/cow-adm/pages');\n      }else if(!ctl.isEdit){\n        $location.path(\"/cow-adm/pages/editPage/\"+pageId)\n      }\n    }\n\n    ctl.toast = appUtilities.createToast(toast);\n  }\n}]);\n","//pages.controller\n/**\n * Fill pages view with pages data.\n *\n * @param  object $scope         Object that refers to the application model.\n * @param  object $location      Angular path service\n * @param  object $routeParams   Parameters passed by Url\n * @param  object pageData       pageData service object\n * @param  object appUtilities      appUtilities service object\n *\n */\nangular.module(\"cowApp\").controller(\"pagesCtrl\",[\"$routeParams\", \"$scope\",\"$location\", \"pageData\", \"appUtilities\" ,function($routeParams, $scope,$location, pageData, appUtilities){\n  var ctl = this;\n\n  appUtilities.setTitle(\"COW Administration panel - Pages\");\n\n  ctl.toast = appUtilities.getToast();\n\n  //Get users data function\n  pageData.getAllPages()\n    .success(function(data) {\n      $scope.pages = data;\n    })\n    .error(function (error) {\n      ctl.toast = appUtilities.createToast(error.toast);\n    });\n  /**\n   * Delete a specific page by id and reload the pages list\n   *\n   * @param  string userId Id of the user that will be deleted\n   *\n   */\n  $scope.deletePage = function(pageId) {\n    pageData.deletePage(pageId)\n      .success(function(data) {\n        pageData.getAllPages()\n          .success(function(data) {\n            $scope.pages = data;\n          })\n          .error(function (error) {\n            ctl.toast = appUtilities.createToast(error.toast);\n          });\n          ctl.toast = appUtilities.createToast(data.toast);\n      })\n      .error(function (error) {\n        ctl.toast = appUtilities.createToast(error.toast);\n      });\n  };\n}]);\n","//Profile - profile.controller\n/**\n * Try to get user data\n *\n * @param  object $routeParams    Parameters passed by Url\n * @param  object $location       Angular path location\n * @param  object userData        data.service.js service object\n * @param  object appUtilities     appUtilities service object\n *\n */\nangular.module(\"cowApp\").controller(\"profileCtrl\",[\"$routeParams\", \"$location\", \"userData\", \"appUtilities\" ,function($routeParams, $location, userData, appUtilities){\n  var ctl = this;\n\n  appUtilities.setTitle(\"COW Administration panel - Profile\");\n\n  ctl.user = {};\n\n  //Get user data function\n  userData.getUser($routeParams.userId)\n    .success(function(data) {\n      ctl.user = data;\n    })\n    .error(function (error) {\n      console.log(error.toast.message);\n    });\n}]);\n","/**\n * Build the parameters and fuctions used in navigation.view\n *\n * @param  object $scope          Object that refers to the application model.\n * @param  object $location       Angular path location\n * @param  object authentication  Authentication service object\n *\n */\nangular.module('cowApp').controller('settingsCtrl', ['$scope', 'appUtilities', function($scope, appUtilities){\n  //ctl is the controller alias\n  var ctl = this;\n\n  $scope.menuItems = [[\"General\", 1], [\"Mail\", 2], [\"IP Ban\", 3], [\"Limit Login\", 4]];\n\n  $scope.activeMenu = $scope.menuItems[0];\n\n  $scope.setActive = function(menuItem) {\n    $scope.activeMenu = menuItem;\n  }\n\n  $scope.$on('createToast', function(event, args) {\n      ctl.toast = args;\n  });\n\n}]);\n","/**\n * Build the parameters and functions used in settings.mailing.view\n *\n * @param  object appUtilities  appUtilities service object\n * @param  object generalData   generalData  service object\n *\n */\nangular.module('cowApp').controller('stGeneralCtrl', ['appUtilities', 'generalData', function(appUtilities, mailData){\n  //ctl is the controller alias\n  var ctl = this;\n\n  appUtilities.setTitle(\"COW Administration panel - General Settings\");\n\n  ctl.mainteance\n\n  mailData.getGeneralParameters()\n    .success(function(data) {\n      ctl.mailForm = data;\n    })\n    .error(function (error) {\n      ctl.toast = appUtilities.createToast(error.toast);\n    });\n\n  //On form submit try to register the user.\n  ctl.onSubmit = function(){\n    ctl.execution = true;\n    console.log('Setting general parameters');\n\n    generalData.setGeneralParameters(ctl.mailForm)\n      .error(function(error){\n          ctl.toast = appUtilities.createToast(error.toast);\n          console.log(ctl.toast);\n      }).then(function(response){\n          ctl.toast = appUtilities.createToast(response.data.toast);\n          console.log(ctl.toast);\n      }).finally(function(){\n          ctl.execution = false;\n      });\n  };\n\n}]);\n","/**\n * Build the parameters and functions used in settings.mailing.view\n *\n * @param  object appUtilities  appUtilities service object\n * @param  object mailData      maildata service object\n *\n */\nangular.module('cowApp').controller('stMailingCtrl', ['appUtilities', '$scope','mailData', function(appUtilities, $scope ,mailData){\n  //ctl is the controller alias\n  var ctl = this;\n\n  appUtilities.setTitle(\"COW Administration panel - Mailing Settings\");\n\n  ctl.mailTo = \"\";\n\n  mailData.getMailParameters()\n    .success(function(data) {\n      ctl.mailForm = data;\n    })\n    .error(function (error) {\n      ctl.toast = appUtilities.createToast(error.toast);\n    });\n\n  //On form submit try to register the user.\n  ctl.onSubmit = function(){\n    ctl.execution = true;\n    console.log('Setting mail parameters');\n\n    ctl.mailForm.secure = document.getElementById('secure').checked;\n\n    mailData.setMailParameters(ctl.mailForm)\n      .error(function(error){\n          $scope.$emit('createToast', appUtilities.createToast(error.toast));\n      }).then(function(response){\n          $scope.$emit('createToast', appUtilities.createToast(response.data.toast));\n      }).finally(function(){\n          ctl.execution = false;\n      });\n  };\n\n  //Try to send a mail to passed mail direction with saved parameters\n  ctl.onTestMail = function(){\n    ctl.execution = true;\n    console.log('Testing mail parameters');\n\n    var subject = \"Test Message\";\n    var text    = \"This is a test message from cow administration panel\";\n    var html    = \"<p>This is a test message from cow administration panel</p>\";\n\n    var mail     = mailData.createEmail(ctl.mailTo, subject, text, html);\n\n    mailData.sendMail(mail)\n      .error(function(error){\n          ctl.toast = appUtilities.createToast(error.toast);\n      }).then(function(response){\n          ctl.toast = appUtilities.createToast(response.data.toast);\n      }).finally(function() {\n          ctl.execution = false;\n      });\n  }\n}]);\n","//sidebar.controller -> See also sidebar.service\n/**\n * Build the parameters and fuctions used in navigation.view\n *\n * @param  object $scope          Object that refers to the application model.\n * @param  object $location       Angular path location\n * @param  object authentication  Authentication service object\n *\n */\nangular.module('cowApp').controller('sidebarCtrl', ['$scope', '$window', '$location', 'authentication', function($scope, $window, $location, authentication){\n  //ctl is the controller alias\n  var ctl = this;\n\n  menuOnScreenSize();\n\n  ctl.menuView  =  function(){\n    switch (true) {\n      case /home/.test($location.$$path):\n        return \"home\";\n        break;\n      case /pages/.test($location.$$path):\n        return \"pages\";\n        break;\n      case /multimedia/.test($location.$$path):\n        return \"multimedia\";\n        break;\n      case /plugins/.test($location.$$path):\n        return \"plugins\";\n        break;\n      case /design/.test($location.$$path):\n        return \"design\";\n        break;\n      case /users/.test($location.$$path):\n        return \"users\";\n        break;\n      case /settings/.test($location.$$path):\n        return \"settings\";\n        break;\n    }\n  }\n\n  $scope.$on('responsiveMenu', function(event, data) {\n      ctl.responsiveMenu = data;\n  });\n\n  angular.element($window).bind('resize', function(){\n    menuOnScreenSize();\n    $scope.$apply();\n  });\n\n  function menuOnScreenSize(){\n    if ($window.innerWidth > 1080) {\n      ctl.responsiveMenu = true;\n    }else{\n      ctl.responsiveMenu = false;\n    }\n  }\n}]);\n","//editUser.controller\n/**\n * Edit a specific user by id\n *\n * @param  object $routeParams  Parameters passed by url\n * @param  object $location     Angular path service\n * @param  object userData      userData service object\n * @param  object appUtilities     appUtilities service object\n *\n */\nangular.module(\"cowApp\").controller(\"userFormCtrl\",[\"$scope\", \"$routeParams\", \"$location\", \"userData\", \"mailData\", \"appUtilities\" ,function($scope, $routeParams ,$location, userData, mailData, appUtilities){\n  var ctl = this;\n\n  ctl.credentials = {\n    name : \"\",\n    email : \"\",\n    password : \"\"\n  };\n\n  if($routeParams.userId){\n    appUtilities.setTitle(\"COW Administration panel - Edit User\");\n\n    ctl.isEdit = true;\n\n    userData.getUser($routeParams.userId)\n      .success(function(data) {\n        ctl.credentials = data;\n      })\n      .error(function (error) {\n        ctl.toast = appUtilities.createToast(error.toast);\n      });\n  }\n  else{\n    appUtilities.setTitle(\"COW Administration panel - New User\");\n\n    ctl.isEdit = false;\n  }\n\n\n  //On form submit try to update the user\n  $scope.saveUser = function () {\n    ctl.execution = true;\n    if (ctl.isEdit) {\n      console.log('Submitting update');\n      userData.updateUser($routeParams.userId, ctl.credentials).error(function(error){\n        ctl.toast = appUtilities.createToast(error.toast);\n        ctl.execution = false;\n      }).then(function(response){\n        //Add toast\n        exit(response.data.toast);\n\n      });\n    }else{\n\n      console.log('Submitting creation');\n\n      userData.createUser(ctl.credentials)\n        .error(function(error){\n            ctl.toast = appUtilities.createToast(error.toast);\n            ctl.execution = false;\n        }).then(function(response){\n            var subject = \"New user\";\n            var text    = \"A new user with name \"+ ctl.credentials.name +\" & email \"+ctl.credentials.email+\" has been created.\";\n            var html    = \"<p>A new user with name \"+ ctl.credentials.name +\" & email \"+ctl.credentials.email+\" has been created.</p>\";\n\n            var mail     = mailData.createEmail(null, subject, text, html);\n\n            mailData.sendMail(mail);\n\n            exit(response.data.toast);      \n      });\n    }\n }\n\n $scope.close = function() {\n   $location.path('/cow-adm/users');\n };\n\n function exit(toast){\n   appUtilities.setToast(toast);\n   $location.path('/cow-adm/users');\n }\n\n}]);\n","//users.controller\n/**\n * Fill users view with users data.\n *\n * @param  object $routeParams   Parameters passed by Url\n * @param  object $scope         Object that refers to the application model.\n * @param  object $location      Angular path service\n * @param  object $routeParams   Parameters passed by Url\n * @param  object authentication Authentication service object\n * @param  object appUtilities     appUtilities service object\n *\n */\nangular.module(\"cowApp\").controller(\"usersCtrl\",[\"authentication\", \"$routeParams\", \"$scope\",\"$location\", \"userData\", \"appUtilities\" ,\n                                                  function(authentication, $routeParams, $scope,$location, userData, appUtilities){\n  var ctl = this;\n\n  appUtilities.setTitle(\"COW Administration panel - Users\");\n\n  ctl.toast = appUtilities.getToast();\n\n  $scope.$on('userToast', function(event, args) {\n      ctl.toast = args;\n  });\n  /**\n   * Delete a specific user by id and reload the users list\n   *\n   * @param  string userId Id of the user that will be deleted\n   *\n   */\n  $scope.deleteUser = function(userId) {\n    if (authentication.currentUser()._id === userId) {\n      var toast = {\n              \"status\" : \"error\",\n              \"message\": \"Mother of cow! You can't delete your own user.\"\n        };\n      ctl.toast = appUtilities.createToast(toast);\n    }else{\n      userData.deleteUser(userId).success(function(data) {\n          userData.getAllUsers()\n            .success(function(data) {\n              $scope.users = data;\n            })\n            .error(function (error) {\n              ctl.toast = appUtilities.createToast(error.toast);\n            });\n            ctl.toast = appUtilities.createToast(data.toast);\n        })\n        .error(function (error) {\n            ctl.toast = appUtilities.createToast(error.toast);\n        });\n    }\n  };\n\n  //Get users data function\n  userData.getAllUsers()\n    .success(function(data) {\n      $scope.users = data;\n    })\n    .error(function (error) {\n      ctl.toast = appUtilities.createToast(error.toast);\n    });\n}]);\n","//appUtilities.service\nangular.module('cowApp').service('appUtilities', ['$window', function($window){\n\n  this.toast = null;\n\n   var setTitle = function(title){\n     $window.document.title = title;\n   };\n\n   var createToast = function(params){\n     return{\n             status  : params.status,\n             message : params.message\n           }\n   };\n\n   var setToast = function(data){\n     this.toast = data;\n   };\n\n   var getToast = function(){\n     if (this.toast != null) {\n       var tmp = this.createToast(this.toast);\n       this.toast = null;\n       return tmp;\n     }\n     return null;\n   };\n\n   return {\n     setTitle    : setTitle,\n     createToast : createToast,\n     setToast    : setToast,\n     getToast    : getToast\n   };\n}]);\n","//Authentication.service\n\n/*A JWT token is actually made up of three separate strings, separated by a dot(.). These three parts are:\n *\n *Header – An encoded JSON object containing the type and the hashing algorithm used\n *Payload – An encoded JSON object containing the data, the real body of the token\n *Signature – An encrypted hash of the header and payload, using the “secret” set on the server\n*/\n\nangular.module('cowApp').service('authentication', ['$http', '$window', function($http, $window){\n  var saveToken = function (token) {\n    $window.localStorage['mean-token'] = token;\n  };\n\n  var getToken = function () {\n    return $window.localStorage['mean-token'];\n  };\n\n  var isLoggedIn = function() {\n    var token = getToken();\n\n    if(token){\n      var payload = preparePayload(token);\n      return payload.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  };\n\n  var currentUser = function() {\n    if(isLoggedIn()){\n      var token = getToken();\n      var payload = preparePayload(token);\n      return {\n        _id   : payload._id,\n        email : payload.email,\n        name  : payload.name\n      };\n    }\n  };\n\n  //private function\n  var preparePayload = function(token){\n    var payload = token.split('.')[1];\n    payload = $window.atob(payload);\n    payload = JSON.parse(payload);\n\n    return payload;\n  };\n\n  login = function(user) {\n    return $http.post('/api/login', user).success(function(data) {\n      saveToken(data.token);\n    });\n  };\n\n  logout = function() {\n     $window.localStorage.removeItem('mean-token');\n  };\n\n  return {\n    currentUser : currentUser,\n    saveToken   : saveToken,\n    getToken    : getToken,\n    isLoggedIn  : isLoggedIn,\n    login       : login,\n    logout      : logout\n  };\n}]);\n","//designData.service\nangular.module('cowApp').service('designData', ['$http', 'authentication', function($http, authentication){\n\n   var getDocument = function(type){\n     return $http.get('/api/getDocument', {\n       headers: {\n         Authorization: 'Bearer '+ authentication.getToken(),\n       },\n       params: {\n           \"documentType\": type\n       }\n     });\n   };\n\n   var saveDocument = function(type, content){\n     return $http.get('/api/saveDocument', {\n       headers: {\n         Authorization: 'Bearer '+ authentication.getToken(),\n       },\n       params: {\n           \"documentType\": type,\n           \"documentContent\": content\n       }\n     });\n   };\n\n   return {\n     getDocument  : getDocument,\n     saveDocument : saveDocument\n   };\n}]);\n","//designData.service\nangular.module('cowApp').service('generalData', ['$http', 'authentication', function($http, authentication){\n\n  var getGeneralParameters = function(){\n    return $http.get('/api/getMailParameters',{\n      headers: {\n        Authorization: 'Bearer '+ authentication.getToken(),\n      }\n    });\n  };\n\n  var setGeneralParameters = function(mailForm){\n    return $http.post('/api/setMailParameters', mailForm, {\n      headers: {\n        Authorization: 'Bearer '+ authentication.getToken(),\n      }\n    });\n  };\n\n  return {\n     getGeneralParameters  : getGeneralParameters,\n     setGeneralParameters  : setGeneralParameters,\n  };\n}]);\n","//designData.service\nangular.module('cowApp').service('mailData', ['$http', 'authentication', function($http, authentication){\n\n  var getMailParameters = function(){\n    return $http.get('/api/getMailParameters',{\n      headers: {\n        Authorization: 'Bearer '+ authentication.getToken(),\n      }\n    });\n  };\n\n  var setMailParameters = function(mailForm){\n    return $http.post('/api/setMailParameters', mailForm, {\n      headers: {\n        Authorization: 'Bearer '+ authentication.getToken(),\n      }\n    });\n  };\n\n   var sendMail = function(mail){\n     return $http.post('/api/sendMail', mail, {\n       headers: {\n        Authorization: 'Bearer '+ authentication.getToken(),\n       }\n     });\n   };\n\n  var createEmail = function(vTo, vSubject, vText, vHtml){\n    return {\n       to      :  vTo,\n       subject :  vSubject,\n       text    :  vText,\n       html    :  vHtml\n    }\n  }\n\n  return {\n     getMailParameters  : getMailParameters,\n     setMailParameters  : setMailParameters,\n     sendMail           : sendMail,\n     createEmail        : createEmail\n  };\n}]);\n","//pageData.service\nangular.module('cowApp').service('pageData', ['$http', 'authentication', function($http, authentication){\n\n    var getAllPages = function(){\n      return $http.get('/api/pages',{\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n\n    var getPageById = function (pageId) {\n      return $http.get('/api/getPageById', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        },\n        params: {\n            \"pageId\": pageId\n        }\n      });\n    };\n\n    var getIndexPage = function(){\n      return $http.get('/api/getIndexPage');\n    };\n\n    var getPageByPath = function(pagePath){\n      return $http.get('/api/getPageByPath', {\n        params: {\n            \"pagePath\": pagePath\n        }\n      });\n    };\n\n    var createPage = function(page){\n      return $http.post('/api/createPage', page, {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    var deletePage = function(pageId){\n      return $http.delete('/api/deletePage', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken(),\n        },\n        params: {\n            \"pageId\": pageId\n        }\n      });\n    };\n\n    var updatePage = function(pageId, page){\n      return $http.put('/api/updatePage', page,{\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken(),\n        },\n        params: {\n            \"pageId\": pageId\n        }\n      });\n    };\n\n    return {\n      createPage      : createPage,\n      getAllPages     : getAllPages,\n      getPageById     : getPageById,\n      getIndexPage    : getIndexPage,\n      getPageByPath   : getPageByPath,\n      deletePage      : deletePage,\n      updatePage      : updatePage\n    };\n}]);\n","//userData.service\n\nangular.module('cowApp').service('userData', ['$http', 'authentication', function($http, authentication){\n\n    var getAllUsers = function(){\n      return $http.get('/api/users',{\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    var getUser = function (userId) {\n      return $http.get('/api/getUser', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        },\n        params: {\n            \"userId\": userId\n        }\n      });\n    };\n\n    var checkEmail = function(userEmail){\n      return $http.get('/api/checkEmail', {\n        params: {\n            \"userEmail\": userEmail\n        }\n      });\n    }\n\n    var changuePassword = function(password){\n      return $http.post('/api/changuePassword', {\n        params: {\n            \"newPassword\": newPassword\n        }\n      });\n    }\n\n    var createUser = function(user){\n      return $http.post('/api/createUser', user, {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    var deleteUser = function(userId){\n      return $http.delete('/api/deleteUser', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken(),\n        },\n        params: {\n            \"userId\": userId\n        }\n      });\n    };\n\n    var updateUser = function(userId, user){\n      return $http.put('/api/updateUser', user,{\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken(),\n        },\n        params: {\n            \"userId\": userId\n        }\n      });\n    };\n\n    var recoverUserPassword = function(mail){\n      console.log(\"recoverUserPassword1\");\n      return $http.get('/api/recoverUserPassword',{\n        params: {\n            \"userMail\": mail\n          }\n      });\n    };\n\n    return {\n      getUser             : getUser,\n      createUser          : createUser,\n      getAllUsers         : getAllUsers,\n      deleteUser          : deleteUser,\n      updateUser          : updateUser,\n      recoverUserPassword : recoverUserPassword\n    };\n}]);\n","//navigation.directive -> See also navigation.controller\nangular.module(\"cowApp\").directive(\"cowheader\", function(){\n  return {\n      restrict: \"EA\",\n      templateUrl: \"/views/adm/directives/header.view.html\",\n      controller: \"headerCtrl as hedCtl\"\n  }\n});\n\n//sidebar.directive -> See also sidebar.controller\nangular.module(\"cowApp\").directive(\"cowsidebar\", function(){\n  return {\n      restrict: \"EA\",\n      templateUrl: \"/views/adm/directives/sidebar.view.html\",\n      controller: \"sidebarCtrl as sideCtl\"\n  }\n});\n\n//toast.directive\nangular.module(\"cowApp\").directive(\"toast\", function(){\n  return {\n      restrict: \"EA\",\n      templateUrl: \"/views/adm/directives/toast.view.html\"\n  }\n});\n\n//codemirror.directive\nangular.module(\"cowApp\").directive(\"codemirror\", function(){\n  return {\n      restrict: \"EA\",\n      templateUrl: \"/views/adm/directives/codemirror.view.html\",\n      controller: \"codemirrorCtrl as cmCtl\"\n  }\n});\n\n//SETTINGS\n\nangular.module(\"cowApp\").directive(\"generalsettings\", function(){\n  return {\n      restrict: \"EA\",\n      templateUrl: \"/views/adm/directives/settings.general.view.html\",\n      controller: \"stGeneralCtrl as stGeneralCtl\"\n  }\n});\n\nangular.module(\"cowApp\").directive(\"mailingsettings\", function(){\n  return {\n      restrict: \"EA\",\n      templateUrl: \"/views/adm/directives/settings.mailing.view.html\",\n      controller: \"stMailingCtrl as stMailingCtl\"\n  }\n});\n","//cowheader.directive\nangular.module(\"cowApp\").directive(\"frontheader\", function(){\n  return {\n      restrict: \"EA\",\n      templateUrl: \"/views/front/directives/header.view.html\",\n      controller: \"\"\n  }\n});\n\n//cowfooter.directive\nangular.module(\"cowApp\").directive(\"frontfooter\", function(){\n  return {\n      restrict: \"EA\",\n      templateUrl: \"/views/front/directives/footer.view.html\",\n      controller: \"\"\n  }\n});\n"]}