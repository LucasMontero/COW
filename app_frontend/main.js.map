{"version":3,"sources":["route.js","codemirror.controller.js","design.controller.js","editPage.controller.js","editUser.controller.js","frontPage.controller.js","home.controller.js","login.controller.js","navigation.controller.js","newPage.controller.js","newUser.controller.js","pages.controller.js","profile.controller.js","settings.controller.js","settings.general.controller.js","settings.mailing.controller.js","sidebar.controller.js","users.controller.js","appUtilities.service.js","authentication.service.js","desingData.service.js","generalData.service.js","mailData.service.js","pageData.service.js","userData.service.js","admPanel.directives.js","frontPage.directives.js"],"names":[],"mappingstDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["var cowApp = angular.module('cowApp', ['ngRoute', 'ui.codemirror']);\r\n\r\ncowApp.config(function ($routeProvider, $locationProvider) {\r\n  $routeProvider\r\n  .when('/', {\r\n    templateUrl: '/views/front/page.view.html',\r\n    controller: 'frontPageCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/404', {\r\n    templateUrl: '/views/front/errors/404.view.html',\r\n    controller: '',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/500', {\r\n    templateUrl: '/views/front/errors/500.view.html',\r\n    controller: '',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm', {\r\n    templateUrl: '/views/adm/login.view.html',\r\n    controller: 'loginCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/home', {\r\n    templateUrl: '/views/adm/home.view.html',\r\n    controller: 'homeCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/pages', {\r\n    templateUrl: '/views/adm/pages.view.html',\r\n    controller: 'pagesCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/pages/newPage', {\r\n    templateUrl: '/views/adm/pageForm.view.html',\r\n    controller: 'newPageCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/pages/editPage/:pageId', {\r\n    templateUrl: '/views/adm/pageForm.view.html',\r\n    controller: 'editPageCtrl',\r\n    controllerAs: 'ctl',\r\n  })\r\n  .when('/cow-adm/multimedia', {\r\n    templateUrl: '/views/adm/multimedia.view.html',\r\n    controller: '',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/plugins', {\r\n    templateUrl: '/views/adm/plugins.view.html',\r\n    controller: '',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/design', {\r\n    templateUrl: '/views/adm/design.view.html',\r\n    controller: 'designCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/users', {\r\n    templateUrl: '/views/adm/users.view.html',\r\n    controller: 'usersCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/users/profile/:userId', {\r\n    templateUrl: '/views/adm/profile.view.html',\r\n    controller: 'profileCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/users/newUser', {\r\n    templateUrl: '/views/adm/userForm.view.html',\r\n    controller: 'newUserCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/users/editUser/:userId', {\r\n    templateUrl: '/views/adm/userForm.view.html',\r\n    controller: 'editUserCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/cow-adm/settings', {\r\n    templateUrl: '/views/adm/settings.view.html',\r\n    controller: 'settingsCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .when('/:pageId', {\r\n    templateUrl: '/views/front/page.view.html',\r\n    controller: 'frontPageCtrl',\r\n    controllerAs: 'ctl'\r\n  })\r\n  .otherwise({redirectTo: '/404'});\r\n\r\n  //Use the HTML5 History API\r\n  $locationProvider.html5Mode(true);\r\n});\r\n\r\ncowApp.run(function ($rootScope, $location, $route, authentication) {\r\n  $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n    if (/cow-adm/.test($location.path()) && !authentication.isLoggedIn()) {\r\n      $location.path('/cow-adm');\r\n    }\r\n\r\n    if($location.path() === '/cow-adm' && authentication.isLoggedIn()){\r\n      $location.path('/cow-adm/home');\r\n    }\r\n  });\r\n});\r\n","//codemirror.controller\r\n/**\r\n * Set codemirror editor options\r\n *\r\n * @param  object $scope          Object that refers to the application model.\r\n *\r\n */\r\nangular.module('cowApp').controller('codemirrorCtrl', ['$scope', function($scope){\r\n  // The modes 'css', 'xml', 'javascript';\r\n\r\n  $scope.initMode = \"xml\"\r\n \r\n // The ui-codemirror options\r\n $scope.cmOptions = {\r\n   lineNumbers: true,\r\n   htmlMode: true,\r\n   smartIndent: true,\r\n   indentWithTabs: true,\r\n   theme : 'material',\r\n   onLoad : function(_cm){\r\n     // HACK to have the codemirror instance in the scope...\r\n     $scope.setMode = function(mode){\r\n       _cm.setOption(\"mode\", mode);\r\n     };\r\n\r\n     $scope.setMode($scope.initMode);\r\n   }\r\n };\r\n}]);\r\n","//design.controller\r\n/**\r\n *\r\n * @param  object $scope          Object that refers to the application model.\r\n * @param  object desingData      desingData service object\r\n * @param  object appUtilities    appUtilities service object\r\n *\r\n */\r\nangular.module('cowApp').controller('designCtrl', ['$scope', 'designData', 'appUtilities', function($scope, designData, appUtilities){\r\n  var ctl = this;\r\n\r\n  appUtilities.setTitle(\"COW Administration panel - Design\");\r\n\r\n  $scope.menuItems = [['Css', 'css'], ['Javascript', 'javascript'], ['Header', 'xml'], ['Footer', 'xml']];\r\n\r\n  designData.getDocument('Css')\r\n    .success(function(data) {\r\n        ctl.design.content = data;\r\n    })\r\n    .error(function (error) {\r\n        ctl.toast = appUtilities.createToast(error.toast);\r\n    });\r\n\r\n  ctl.design = {};\r\n\r\n  $scope.activeMenu = $scope.menuItems[0];\r\n\r\n  $scope.setActive = function(menuItem) {\r\n    $scope.activeMenu = menuItem;\r\n\r\n    designData.getDocument(menuItem[0])\r\n      .success(function(data) {\r\n          ctl.design.content = data;\r\n      })\r\n      .error(function (error) {\r\n          ctl.toast = appUtilities.createToast(error.toast);\r\n      });\r\n  }\r\n\r\n  //On form submit try to save the document\r\n  ctl.onSubmit = function () {\r\n    ctl.execution = true;\r\n    console.log('Submitting update');\r\n    designData.saveDocument($scope.activeMenu[0], ctl.design.content)\r\n      .error(function(error){\r\n          ctl.toast = appUtilities.createToast(error.toast);\r\n      })\r\n      .then(function(response){\r\n          ctl.toast = appUtilities.createToast(response.data.toast);\r\n     }).finally(function() {\r\n          ctl.execution = false;\r\n     });;\r\n  };\r\n}]);\r\n","\r\n//editPage.controller\r\n/**\r\n * Edit a specific page by id\r\n *\r\n * @param  object $scope         Object that refers to the application model.\r\n * @param  object $routeParams   Parameters passed by url\r\n * @param  object $location      Angular path service\r\n * @param  object pageData       pageData service object\r\n * @param  object $routeParams   Parameters passed by Url\r\n * @param  object appUtilities      appUtilities service object\r\n *\r\n */\r\nangular.module(\"cowApp\").controller(\"editPageCtrl\",[\"$scope\", \"$routeParams\", \"$location\", \"pageData\", \"appUtilities\" ,function($scope, $routeParams ,$location, pageData, appUtilities){\r\n  var ctl = this;\r\n\r\n  appUtilities.setTitle(\"COW Administration panel - Edit Page\");\r\n\r\n  ctl.isEdit = true;\r\n\r\n  ctl.pageForm = {};\r\n\r\n  pageData.getPageById($routeParams.pageId)\r\n    .success(function(data) {\r\n      ctl.pageForm = data;\r\n    })\r\n    .error(function (error) {\r\n      ctl.toast = appUtilities.createToast(error.toast);\r\n    });\r\n\r\n  //On form submit try to update de user\r\n  ctl.onSubmit = function () {\r\n    console.log('Updating page');\r\n    ctl.pageForm.header = document.getElementById('header').checked;\r\n    ctl.pageForm.footer = document.getElementById('footer').checked;\r\n    ctl.pageForm.index  = document.getElementById('index').checked;\r\n    ctl.pageForm.public = document.getElementById('public').checked;\r\n\r\n    pageData.updatePage($routeParams.pageId, ctl.pageForm).error(function(error){\r\n          ctl.toast = appUtilities.createToast(error.toast);\r\n    }).then(function(response){\r\n          //Add toast\r\n          console.log(response.data.toast.message)\r\n          $location.path('/cow-adm/pages');\r\n    });\r\n  };\r\n\r\n}]);\r\n","//editUser.controller\r\n/**\r\n * Edit a specific user by id\r\n *\r\n * @param  object $routeParams  Parameters passed by url\r\n * @param  object $location     Angular path service\r\n * @param  object userData      userData service object\r\n * @param  object appUtilities     appUtilities service object\r\n *\r\n */\r\nangular.module(\"cowApp\").controller(\"editUserCtrl\",[\"$routeParams\", \"$location\", \"userData\", \"appUtilities\" ,function($routeParams ,$location, userData, appUtilities){\r\n  var ctl = this;\r\n\r\n  appUtilities.setTitle(\"COW Administration panel - Edit User\");\r\n\r\n  ctl.isEdit = true;\r\n\r\n  ctl.credentials = {\r\n    name : \"\",\r\n    email : \"\",\r\n    password : \"\"\r\n  };\r\n\r\n  userData.getUser($routeParams.userId)\r\n    .success(function(data) {\r\n      ctl.credentials = data;\r\n    })\r\n    .error(function (error) {\r\n      ctl.toast = appUtilities.createToast(error.toast);\r\n    });\r\n\r\n  //On form submit try to update the user\r\n  ctl.onSubmit = function () {\r\n    console.log('Submitting update');\r\n    userData.updateUser($routeParams.userId, ctl.credentials).error(function(error){\r\n      ctl.toast = appUtilities.createToast(error.toast);\r\n    }).then(function(response){\r\n      //Add toast\r\n      console.log(response.data.toast.message)\r\n      $location.path('/cow-adm/users');\r\n    });\r\n  };\r\n\r\n}]);\r\n","\r\n//frontPageCtrl.controller\r\n/**\r\n * Cronstruct the front page of the application\r\n *\r\n * @param  object appUtilities     appUtilities service object\r\n * @param  object $location     Angular path service\r\n * @param  object pageData      pageData service object\r\n *\r\n */\r\nangular.module(\"cowApp\").controller(\"frontPageCtrl\",[\"appUtilities\", \"pageData\", \"$location\", \"$scope\", \"$sce\", function(appUtilities, pageData, $location, $scope, $sce){\r\n  //controller alias\r\n  var ctl = this;\r\n\r\n  if($location.path() === '/'){\r\n    pageData.getIndexPage()\r\n     .success(function(data) {\r\n         setPage(data);\r\n      })\r\n      .error(function (error) {\r\n          $location.path('/500');\r\n      });\r\n  }else{\r\n    pageData.getPageByPath($location.path())\r\n     .success(function(data) {\r\n          if (data.length === 1) {\r\n              setPage(data);\r\n          }else{\r\n              $location.path('/404');\r\n          }\r\n      })\r\n      .error(function (error) {\r\n          $location.path('/500');\r\n      });\r\n  }\r\n\r\n  var setPage = function(data){\r\n    ctl.pageData = data[0];\r\n    appUtilities.setTitle(ctl.pageData.title);\r\n    $scope.content = $sce.trustAsHtml(ctl.pageData.content);\r\n  }\r\n\r\n}]);\r\n","//home.controller\r\n/**\r\n * Shows in log if controller is running\r\n *\r\n * @param  object appUtilities     appUtilities service object\r\n *\r\n */\r\nangular.module(\"cowApp\").controller(\"homeCtrl\",[\"appUtilities\", function(appUtilities){\r\n  console.log(\"Home controller is running\");\r\n  appUtilities.setTitle(\"COW Administration panel\");\r\n}]);\r\n","//Authentication - login.controller\r\n/**\r\n * Try to login the user with passed credentials\r\n *\r\n * @param  object $location       Angular path location\r\n * @param  object authentication  Authentication service object\r\n * @param  object appUtilities     appUtilities service object\r\n *\r\n */\r\nangular.module(\"cowApp\").controller(\"loginCtrl\",['$location', \"authentication\", \"appUtilities\",function($location, authentication, appUtilities) {\r\n    //ctl is the controller alias\r\n    var ctl = this;\r\n\r\n    appUtilities.setTitle(\"COW Administration panel - Login\");\r\n\r\n    ctl.credentials = {\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    //On form submit add input data to credentials variables and try to login with them.\r\n    ctl.onSubmit = function () {\r\n      authentication.login(ctl.credentials)\r\n        .error(function(error){\r\n          ctl.toast = appUtilities.createToast(error.toast);\r\n        })\r\n        .then(function(){\r\n          $location.path('/cow-adm/home');\r\n        });\r\n    };\r\n}]);\r\n","//navigation.controller -> See also navigation.service\r\n/**\r\n * Build the parameters and fuctions used in navigation.view\r\n *\r\n * @param  object $scope          Object that refers to the application model.\r\n * @param  object $location       Angular path location\r\n * @param  object authentication  Authentication service object\r\n *\r\n */\r\nangular.module('cowApp').controller('navigationCtrl', ['$scope', '$location', 'authentication', function($scope, $location, authentication){\r\n  //ctl is the controller alias\r\n  var ctl = this;\r\n\r\n  //Check if user is authenticated and if it is, shows the current user.\r\n  ctl.isLoggedIn  = authentication.isLoggedIn();\r\n  ctl.currentUser = authentication.currentUser();\r\n\r\n  /**\r\n   * Delete the user session on the browser\r\n   */\r\n  $scope.logout = function(){\r\n    authentication.logout();\r\n    $location.path('/');\r\n  };\r\n}]);\r\n","//newPage.controller\r\n/**\r\n * Try to register a new page in database\r\n *\r\n * @param  object $location   Angular path location\r\n * @param  object pageData    pageData service object\r\n * @param  object appUtilities     appUtilities service object\r\n *\r\n */\r\nangular.module(\"cowApp\").controller(\"newPageCtrl\",[\"$location\", \"pageData\", \"mailData\", \"appUtilities\", function($location, pageData, mailData, appUtilities){\r\n  //ctl is the controller alias\r\n  var ctl = this;\r\n\r\n  appUtilities.setTitle(\"COW Administration panel - New Page\");\r\n\r\n  ctl.isEdit = false;\r\n\r\n  ctl.pageForm = {\r\n    title   : \"\",\r\n    path    : \"\",\r\n    content : \"\",\r\n    header  : false,\r\n    footer  : false,\r\n    index   : false,\r\n    public  : false\r\n   };\r\n\r\n  //On form submit try to register the user.\r\n  ctl.onSubmit = function () {\r\n    console.log('Submitting creation');\r\n\r\n    ctl.pageForm.header = document.getElementById('header').checked;\r\n    ctl.pageForm.footer = document.getElementById('footer').checked;\r\n    ctl.pageForm.index  = document.getElementById('index').checked;\r\n    ctl.pageForm.public = document.getElementById('public').checked;\r\n\r\n    pageData.createPage(ctl.pageForm)\r\n      .error(function(error){\r\n          ctl.toast = appUtilities.createToast(error.toast);\r\n      })\r\n      .then(function(response){\r\n          var subject = \"New page\";\r\n          var text    = \"A new page has been created\";\r\n          var html    = \"<p>A new page has been created</p>\";\r\n\r\n          var mail     = mailData.createEmail(null, subject, text, html);\r\n\r\n          mailData.sendMail(mail);\r\n          //Add toast\r\n          console.log(response.data.toast.message)\r\n          $location.path('/cow-adm/pages');\r\n      });\r\n  };\r\n}]);\r\n","/**\r\n * Try to register a new user in database\r\n *\r\n * @param  object $location   Angular path location\r\n * @param  object userData    userData service object\r\n * @param  object appUtilities     appUtilities service object\r\n *\r\n */\r\nangular.module(\"cowApp\").controller(\"newUserCtrl\",[\"$location\", \"userData\", \"mailData\", \"appUtilities\", function($location, userData, mailData, appUtilities){\r\n  //ctl is the controller alias\r\n  var ctl = this;\r\n\r\n  appUtilities.setTitle(\"COW Administration panel - New User\");\r\n\r\n  ctl.isEdit = false;\r\n\r\n  ctl.credentials = {\r\n    name : \"\",\r\n    email : \"\",\r\n    password : \"\"\r\n  };\r\n\r\n  //On form submit try to register the user.\r\n  ctl.onSubmit = function () {\r\n      ctl.execution = true;\r\n      console.log('Submitting creation');\r\n\r\n      userData.createUser(ctl.credentials)\r\n        .error(function(error){\r\n            ctl.toast = appUtilities.createToast(error.toast);\r\n            ctl.execution = false;\r\n        }).then(function(response){\r\n            var subject = \"New user\";\r\n            var text    = \"A new user with name \"+ ctl.credentials.name +\" & email \"+ctl.credentials.email+\" has been created.\";\r\n            var html    = \"<p>A new user with name \"+ ctl.credentials.name +\" & email \"+ctl.credentials.email+\" has been created.</p>\";\r\n\r\n            var mail     = mailData.createEmail(null, subject, text, html);\r\n\r\n            mailData.sendMail(mail);\r\n\r\n            //Add toast\r\n            console.log(response.data.toast.message)\r\n\r\n            $location.path('/cow-adm/users');\r\n      });\r\n  };\r\n}]);\r\n","//pages.controller\r\n/**\r\n * Fill pages view with pages data.\r\n *\r\n * @param  object $scope         Object that refers to the application model.\r\n * @param  object $location      Angular path service\r\n * @param  object $routeParams   Parameters passed by Url\r\n * @param  object pageData       pageData service object\r\n * @param  object appUtilities      appUtilities service object\r\n *\r\n */\r\nangular.module(\"cowApp\").controller(\"pagesCtrl\",[\"$routeParams\", \"$scope\",\"$location\", \"pageData\", \"appUtilities\" ,function($routeParams, $scope,$location, pageData, appUtilities){\r\n  var ctl = this;\r\n\r\n  appUtilities.setTitle(\"COW Administration panel - Pages\");\r\n\r\n  //Get users data function\r\n  pageData.getAllPages()\r\n    .success(function(data) {\r\n      $scope.pages = data;\r\n    })\r\n    .error(function (error) {\r\n      ctl.toast = appUtilities.createToast(error.toast);\r\n    });\r\n  /**\r\n   * Delete a specific page by id and reload the pages list\r\n   *\r\n   * @param  string userId Id of the user that will be deleted\r\n   *\r\n   */\r\n  $scope.deletePage = function(pageId) {\r\n    pageData.deletePage(pageId)\r\n      .success(function(data) {\r\n        pageData.getAllPages()\r\n          .success(function(data) {\r\n            $scope.pages = data;\r\n          })\r\n          .error(function (error) {\r\n            ctl.toast = appUtilities.createToast(error.toast);\r\n          });\r\n          ctl.toast = appUtilities.createToast(data.toast);\r\n      })\r\n      .error(function (error) {\r\n        ctl.toast = appUtilities.createToast(error.toast);\r\n      });\r\n  };\r\n}]);\r\n","//Profile - profile.controller\r\n/**\r\n * Try to get user data\r\n *\r\n * @param  object $routeParams    Parameters passed by Url\r\n * @param  object $location       Angular path location\r\n * @param  object userData        data.service.js service object\r\n * @param  object appUtilities     appUtilities service object\r\n *\r\n */\r\nangular.module(\"cowApp\").controller(\"profileCtrl\",[\"$routeParams\", \"$location\", \"userData\", \"appUtilities\" ,function($routeParams, $location, userData, appUtilities){\r\n  var ctl = this;\r\n\r\n  appUtilities.setTitle(\"COW Administration panel - Profile\");\r\n\r\n  ctl.user = {};\r\n\r\n  //Get user data function\r\n  userData.getUser($routeParams.userId)\r\n    .success(function(data) {\r\n      ctl.user = data;\r\n    })\r\n    .error(function (error) {\r\n      console.log(error.toast.message);\r\n    });\r\n}]);\r\n","/**\r\n * Build the parameters and fuctions used in navigation.view\r\n *\r\n * @param  object $scope          Object that refers to the application model.\r\n * @param  object $location       Angular path location\r\n * @param  object authentication  Authentication service object\r\n *\r\n */\r\nangular.module('cowApp').controller('settingsCtrl', ['$scope', 'appUtilities', function($scope, appUtilities){\r\n  //ctl is the controller alias\r\n  var ctl = this;\r\n\r\n  $scope.menuItems = [[\"General\", 1], [\"Mail\", 2], [\"IP Ban\", 3], [\"Limit Login\", 4]];\r\n\r\n  $scope.activeMenu = $scope.menuItems[0];\r\n\r\n  $scope.setActive = function(menuItem) {\r\n    $scope.activeMenu = menuItem;\r\n  }\r\n}]);\r\n","/**\r\n * Build the parameters and functions used in settings.mailing.view\r\n *\r\n * @param  object appUtilities  appUtilities service object\r\n * @param  object generalData   generalData  service object\r\n *\r\n */\r\nangular.module('cowApp').controller('stGeneralCtrl', ['appUtilities', 'generalData', function(appUtilities, mailData){\r\n  //ctl is the controller alias\r\n  var ctl = this;\r\n\r\n  appUtilities.setTitle(\"COW Administration panel - General Settings\");\r\n\r\n  mailData.getGeneralParameters()\r\n    .success(function(data) {\r\n      ctl.mailForm = data;\r\n    })\r\n    .error(function (error) {\r\n      ctl.toast = appUtilities.createToast(error.toast);\r\n    });\r\n\r\n\r\n  //On form submit try to register the user.\r\n  ctl.onSubmit = function(){\r\n    ctl.execution = true;\r\n    console.log('Setting general parameters');\r\n\r\n    generalData.setGeneralParameters(ctl.mailForm)\r\n      .error(function(error){\r\n          ctl.toast = appUtilities.createToast(error.toast);\r\n          console.log(ctl.toast);\r\n      }).then(function(response){\r\n          ctl.toast = appUtilities.createToast(response.data.toast);\r\n          console.log(ctl.toast);\r\n      }).finally(function(){\r\n          ctl.execution = false;\r\n      });\r\n  };\r\n\r\n}]);\r\n","/**\r\n * Build the parameters and functions used in settings.mailing.view\r\n *\r\n * @param  object appUtilities  appUtilities service object\r\n * @param  object mailData      maildata service object\r\n *\r\n */\r\nangular.module('cowApp').controller('stMailingCtrl', ['appUtilities', 'mailData', function(appUtilities, mailData){\r\n  //ctl is the controller alias\r\n  var ctl = this;\r\n\r\n  appUtilities.setTitle(\"COW Administration panel - Mailing Settings\");\r\n\r\n  ctl.mailTo = \"\";\r\n\r\n  mailData.getMailParameters()\r\n    .success(function(data) {\r\n      ctl.mailForm = data;\r\n    })\r\n    .error(function (error) {\r\n      ctl.toast = appUtilities.createToast(error.toast);\r\n    });\r\n\r\n  //On form submit try to register the user.\r\n  ctl.onSubmit = function(){\r\n    ctl.execution = true;\r\n    console.log('Setting mail parameters');\r\n\r\n    ctl.mailForm.secure = document.getElementById('secure').checked;\r\n\r\n    mailData.setMailParameters(ctl.mailForm)\r\n      .error(function(error){\r\n          ctl.toast = appUtilities.createToast(error.toast);\r\n          console.log(ctl.toast);\r\n      }).then(function(response){\r\n          ctl.toast = appUtilities.createToast(response.data.toast);\r\n          console.log(ctl.toast);\r\n      }).finally(function(){\r\n          ctl.execution = false;\r\n      });\r\n  };\r\n\r\n  //Try to send a mail to passed mail direction with saved parameters\r\n  ctl.onTestMail = function(){\r\n    ctl.execution = true;\r\n    console.log('Testing mail parameters');\r\n\r\n    var subject = \"Test Message\";\r\n    var text    = \"This is a test message from cow administration panel\";\r\n    var html    = \"<p>This is a test message from cow administration panel</p>\";\r\n\r\n    var mail     = mailData.createEmail(ctl.mailTo, subject, text, html);\r\n\r\n    mailData.sendMail(mail)\r\n      .error(function(error){\r\n          ctl.toast = appUtilities.createToast(error.toast);\r\n          console.log(ctl.toast);\r\n      }).then(function(response){\r\n          ctl.toast = appUtilities.createToast(response.data.toast);\r\n          console.log(ctl.toast);\r\n      }).finally(function() {\r\n          ctl.execution = false;\r\n      });\r\n  }\r\n}]);\r\n","//sidebar.controller -> See also sidebar.service\r\n/**\r\n * Build the parameters and fuctions used in navigation.view\r\n *\r\n * @param  object $scope          Object that refers to the application model.\r\n * @param  object $location       Angular path location\r\n * @param  object authentication  Authentication service object\r\n *\r\n */\r\nangular.module('cowApp').controller('sidebarCtrl', ['$scope', '$location', 'authentication', function($scope, $location, authentication){\r\n  //ctl is the controller alias\r\n  var ctl = this;\r\n\r\n  ctl.menuView  =  function(){\r\n    switch (true) {\r\n      case /users/.test($location.$$path):\r\n        return \"users\";\r\n        break;\r\n    }\r\n  }\r\n\r\n}]);\r\n","//users.controller\r\n/**\r\n * Fill users view with users data.\r\n *\r\n * @param  object $routeParams   Parameters passed by Url\r\n * @param  object $scope         Object that refers to the application model.\r\n * @param  object $location      Angular path service\r\n * @param  object $routeParams   Parameters passed by Url\r\n * @param  object authentication Authentication service object\r\n * @param  object appUtilities     appUtilities service object\r\n *\r\n */\r\nangular.module(\"cowApp\").controller(\"usersCtrl\",[\"$routeParams\", \"$scope\",\"$location\", \"userData\", \"appUtilities\" ,function($routeParams, $scope,$location, userData, appUtilities){\r\n  var ctl = this;\r\n\r\n\r\n  appUtilities.setTitle(\"COW Administration panel - Users\");\r\n\r\n  /**\r\n   * Delete a specific user by id and reload the users list\r\n   *\r\n   * @param  string userId Id of the user that will be deleted\r\n   *\r\n   */\r\n  $scope.deleteUser = function(userId) {\r\n    userData.deleteUser(userId)\r\n      .success(function(data) {\r\n        userData.getAllUsers()\r\n          .success(function(data) {\r\n            $scope.users = data;\r\n          })\r\n          .error(function (error) {\r\n            ctl.toast = appUtilities.createToast(error.toast);\r\n          });\r\n          ctl.toast = appUtilities.createToast(data.toast);\r\n      })\r\n      .error(function (error) {\r\n          ctl.toast = appUtilities.createToast(error.toast);\r\n      });\r\n  };\r\n\r\n  //Get users data function\r\n  userData.getAllUsers()\r\n    .success(function(data) {\r\n      $scope.users = data;\r\n    })\r\n    .error(function (error) {\r\n      ctl.toast = appUtilities.createToast(error.toast);\r\n    });\r\n}]);\r\n","//appUtilities.service\r\nangular.module('cowApp').service('appUtilities', ['$window', function($window){\r\n   var setTitle = function(title){\r\n     $window.document.title = title;\r\n   };\r\n\r\n   var createToast = function(params){\r\n     return{\r\n             status  : params.status,\r\n             message : params.message\r\n           }\r\n   }\r\n\r\n   return {\r\n     setTitle    : setTitle,\r\n     createToast : createToast\r\n   };\r\n}]);\r\n","//Authentication.service\r\n\r\n/*A JWT token is actually made up of three separate strings, separated by a dot(.). These three parts are:\r\n *\r\n *Header – An encoded JSON object containing the type and the hashing algorithm used\r\n *Payload – An encoded JSON object containing the data, the real body of the token\r\n *Signature – An encrypted hash of the header and payload, using the “secret” set on the server\r\n*/\r\n\r\nangular.module('cowApp').service('authentication', ['$http', '$window', function($http, $window){\r\n  var saveToken = function (token) {\r\n    $window.localStorage['mean-token'] = token;\r\n  };\r\n\r\n  var getToken = function () {\r\n    return $window.localStorage['mean-token'];\r\n  };\r\n\r\n  var isLoggedIn = function() {\r\n    var token = getToken();\r\n\r\n    if(token){\r\n      var payload = preparePayload(token);\r\n      return payload.exp > Date.now() / 1000;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  var currentUser = function() {\r\n    if(isLoggedIn()){\r\n      var token = getToken();\r\n      var payload = preparePayload(token);\r\n      return {\r\n        _id   : payload._id,\r\n        email : payload.email,\r\n        name  : payload.name\r\n      };\r\n    }\r\n  };\r\n\r\n  //private function\r\n  var preparePayload = function(token){\r\n    var payload = token.split('.')[1];\r\n    payload = $window.atob(payload);\r\n    payload = JSON.parse(payload);\r\n\r\n    return payload;\r\n  };\r\n\r\n  login = function(user) {\r\n    return $http.post('/api/login', user).success(function(data) {\r\n      saveToken(data.token);\r\n    });\r\n  };\r\n\r\n  logout = function() {\r\n     $window.localStorage.removeItem('mean-token');\r\n  };\r\n\r\n  return {\r\n    currentUser : currentUser,\r\n    saveToken   : saveToken,\r\n    getToken    : getToken,\r\n    isLoggedIn  : isLoggedIn,\r\n    login       : login,\r\n    logout      : logout\r\n  };\r\n}]);\r\n","//designData.service\r\nangular.module('cowApp').service('designData', ['$http', 'authentication', function($http, authentication){\r\n\r\n   var getDocument = function(type){\r\n     return $http.get('/api/getDocument', {\r\n       headers: {\r\n         Authorization: 'Bearer '+ authentication.getToken(),\r\n       },\r\n       params: {\r\n           \"documentType\": type\r\n       }\r\n     });\r\n   };\r\n\r\n   var saveDocument = function(type, content){\r\n     return $http.get('/api/saveDocument', {\r\n       headers: {\r\n         Authorization: 'Bearer '+ authentication.getToken(),\r\n       },\r\n       params: {\r\n           \"documentType\": type,\r\n           \"documentContent\": content\r\n       }\r\n     });\r\n   };\r\n\r\n   return {\r\n     getDocument  : getDocument,\r\n     saveDocument : saveDocument\r\n   };\r\n}]);\r\n","//designData.service\r\nangular.module('cowApp').service('generalData', ['$http', 'authentication', function($http, authentication){\r\n\r\n  var getGeneralParameters = function(){\r\n    return $http.get('/api/getMailParameters',{\r\n      headers: {\r\n        Authorization: 'Bearer '+ authentication.getToken(),\r\n      }\r\n    });\r\n  };\r\n\r\n  var setGeneralParameters = function(mailForm){\r\n    return $http.post('/api/setMailParameters', mailForm, {\r\n      headers: {\r\n        Authorization: 'Bearer '+ authentication.getToken(),\r\n      }\r\n    });\r\n  };\r\n\r\n  return {\r\n     getGeneralParameters  : getGeneralParameters,\r\n     setGeneralParameters  : setGeneralParameters,\r\n  };\r\n}]);\r\n","//designData.service\r\nangular.module('cowApp').service('mailData', ['$http', 'authentication', function($http, authentication){\r\n\r\n  var getMailParameters = function(){\r\n    return $http.get('/api/getMailParameters',{\r\n      headers: {\r\n        Authorization: 'Bearer '+ authentication.getToken(),\r\n      }\r\n    });\r\n  };\r\n\r\n  var setMailParameters = function(mailForm){\r\n    return $http.post('/api/setMailParameters', mailForm, {\r\n      headers: {\r\n        Authorization: 'Bearer '+ authentication.getToken(),\r\n      }\r\n    });\r\n  };\r\n\r\n  var sendMail = function(mail){\r\n    return $http.post('/api/sendMail', mail, {\r\n      headers: {\r\n        Authorization: 'Bearer '+ authentication.getToken(),\r\n      }\r\n    });\r\n  };\r\n\r\n  var createEmail = function(vTo, vSubject, vText, vHtml){\r\n    return {\r\n       to      :  vTo,\r\n       subject :  vSubject,\r\n       text    :  vText,\r\n       html    :  vHtml\r\n    }\r\n  }\r\n\r\n  return {\r\n     getMailParameters  : getMailParameters,\r\n     setMailParameters  : setMailParameters,\r\n     sendMail           : sendMail,\r\n     createEmail        : createEmail\r\n  };\r\n}]);\r\n","//pageData.service\r\nangular.module('cowApp').service('pageData', ['$http', 'authentication', function($http, authentication){\r\n\r\n    var getAllPages = function(){\r\n      return $http.get('/api/pages',{\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n\r\n    var getPageById = function (pageId) {\r\n      return $http.get('/api/getPageById', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        },\r\n        params: {\r\n            \"pageId\": pageId\r\n        }\r\n      });\r\n    };\r\n\r\n    var getIndexPage = function(){\r\n      return $http.get('/api/getIndexPage');\r\n    };\r\n\r\n    var getPageByPath = function(pagePath){\r\n      return $http.get('/api/getPageByPath', {\r\n        params: {\r\n            \"pagePath\": pagePath\r\n        }\r\n      });\r\n    };\r\n\r\n    var createPage = function(page){\r\n      return $http.post('/api/createPage', page, {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    var deletePage = function(pageId){\r\n      return $http.delete('/api/deletePage', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken(),\r\n        },\r\n        params: {\r\n            \"pageId\": pageId\r\n        }\r\n      });\r\n    };\r\n\r\n    var updatePage = function(pageId, page){\r\n      return $http.put('/api/updatePage', page,{\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken(),\r\n        },\r\n        params: {\r\n            \"pageId\": pageId\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      createPage      : createPage,\r\n      getAllPages     : getAllPages,\r\n      getPageById     : getPageById,\r\n      getIndexPage    : getIndexPage,\r\n      getPageByPath   : getPageByPath,\r\n      deletePage      : deletePage,\r\n      updatePage      : updatePage\r\n    };\r\n}]);\r\n","//userData.service\r\n\r\nangular.module('cowApp').service('userData', ['$http', 'authentication', function($http, authentication){\r\n\r\n    var getAllUsers = function(){\r\n      return $http.get('/api/users',{\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    var getUser = function (userId) {\r\n      return $http.get('/api/getUser', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        },\r\n        params: {\r\n            \"userId\": userId\r\n        }\r\n      });\r\n    };\r\n\r\n    var createUser = function(user){\r\n      return $http.post('/api/createUser', user, {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    var deleteUser = function(userId){\r\n      return $http.delete('/api/deleteUser', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken(),\r\n        },\r\n        params: {\r\n            \"userId\": userId\r\n        }\r\n      });\r\n    };\r\n\r\n    var updateUser = function(userId, user){\r\n      return $http.put('/api/updateUser', user,{\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken(),\r\n        },\r\n        params: {\r\n            \"userId\": userId\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      getUser     : getUser,\r\n      createUser  : createUser,\r\n      getAllUsers : getAllUsers,\r\n      deleteUser  : deleteUser,\r\n      updateUser  : updateUser\r\n    };\r\n}]);\r\n","//navigation.directive -> See also navigation.controller\r\nangular.module(\"cowApp\").directive(\"navigation\", function(){\r\n  return {\r\n      restrict: \"EA\",\r\n      templateUrl: \"/views/adm/directives/navigation.view.html\",\r\n      controller: \"navigationCtrl as navCtl\"\r\n  }\r\n});\r\n\r\n//sidebar.directive -> See also sidebar.controller\r\nangular.module(\"cowApp\").directive(\"sidebar\", function(){\r\n  return {\r\n      restrict: \"EA\",\r\n      templateUrl: \"/views/adm/directives/sidebar.view.html\",\r\n      controller: \"sidebarCtrl as sideCtl\"\r\n  }\r\n});\r\n\r\n//toast.directive\r\nangular.module(\"cowApp\").directive(\"toast\", function(){\r\n  return {\r\n      restrict: \"EA\",\r\n      templateUrl: \"/views/adm/directives/toast.view.html\",\r\n      controller: \"\"\r\n  }\r\n});\r\n\r\n//codemirror.directive\r\nangular.module(\"cowApp\").directive(\"codemirror\", function(){\r\n  return {\r\n      restrict: \"EA\",\r\n      templateUrl: \"/views/adm/directives/codemirror.view.html\",\r\n      controller: \"codemirrorCtrl as cmCtl\"\r\n  }\r\n});\r\n\r\n//SETTINGS\r\n\r\nangular.module(\"cowApp\").directive(\"generalsettings\", function(){\r\n  return {\r\n      restrict: \"EA\",\r\n      templateUrl: \"/views/adm/directives/settings.general.view.html\",\r\n      controller: \"stGeneralCtrl as stGeneralCtl\"\r\n  }\r\n});\r\n\r\nangular.module(\"cowApp\").directive(\"mailingsettings\", function(){\r\n  return {\r\n      restrict: \"EA\",\r\n      templateUrl: \"/views/adm/directives/settings.mailing.view.html\",\r\n      controller: \"stMailingCtrl as stMailingCtl\"\r\n  }\r\n});\r\n","//cowheader.directive\r\nangular.module(\"cowApp\").directive(\"cowheader\", function(){\r\n  return {\r\n      restrict: \"EA\",\r\n      templateUrl: \"/views/front/directives/header.view.html\",\r\n      controller: \"\"\r\n  }\r\n});\r\n\r\n//cowfooter.directive\r\nangular.module(\"cowApp\").directive(\"cowfooter\", function(){\r\n  return {\r\n      restrict: \"EA\",\r\n      templateUrl: \"/views/front/directives/footer.view.html\",\r\n      controller: \"\"\r\n  }\r\n});\r\n"]}